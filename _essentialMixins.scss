// Essential Mixins by Simek [0.0.2]

// Global Variables

$narrowPrefixes: -webkit-, -moz-, "";
$defaultPrefixes: -webkit-, -moz-, -o-, "";
$extendedPrefixes: -webkit-, -moz-, -ms-, -o-, "";

// Propert: border-radius

@mixin borderRadius($size...) {
	@if length($size) == 1 {
		@each $prefix in $defaultPrefixes {
			#{$prefix}border-radius: $size;
		}
	} @else {
		@include customBorderRadius($size...);
	}
}

@mixin customBorderRadius($topLeft: 0, $topRight: 0, $bottomRight: 0, $bottomLeft: 0) {
	@each $prefix in $defaultPrefixes {
		@if $prefix == "-moz-" {
			@if $topLeft != 0 {
				-moz-border-radius-topleft: $topLeft;
			}
			@if $topRight != 0 {
				-moz-border-radius-topright: $topRight;
			}
			@if $bottomRight != 0 {
				-moz-border-radius-bottomright: $bottomRight;
			}
			@if $bottomLeft != 0 {
				-moz-border-radius-bottomleft: $bottomLeft;
			}
		} @else {
			@if $topLeft != 0 {
				#{$prefix}border-top-left-radius: $topLeft;
			}
			@if $topRight != 0 {
				#{$prefix}border-top-right-radius: $topRight;
			}
			@if $bottomRight != 0 {
				#{$prefix}border-bottom-right-radius: $bottomRight;
			}
			@if $bottomLeft != 0 {
				#{$prefix}border-bottom-left-radius: $bottomLeft;
			}
		}
	}
}

// Propert: user-select

@mixin selection($type) {
	@each $prefix in $defaultPrefixes {
		#{$prefix}user-select: $type;
	}
}

@mixin noSelection {
	@include selection(none);
}

// Propert: box-sizing

@mixin boxSizing($type: border-box) {
	@each $prefix in $defaultPrefixes {
		#{$prefix}box-sizing: $type;
	}
}

@mixin noBoxSizing() {
	@include boxSizing(content-box !important);
}

// Property: background
// Value: linear-gradient

@mixin linearGradient($properties...) {
	@each $prefix in $extendedPrefixes {
		background: #{$prefix}linear-gradient($properties);
	}
}

// Property: apperance

@mixin apperance($property) {
	@each $prefix in $narrowPrefixes {
		#{$prefix}apperance: $property;
	}
}

// Layout: Center node in viewport

@mixin centeredNode($width, $height, $correctTop: 0, $correctLeft: 0) {
	@include size($width, $height);
	position: absolute;
	top: 50%;
	left: 50%;
	margin-top: (-$height / 2) + $correctTop;
	margin-left: (-$width / 2) + $correctLeft;
}

@mixin size($width, $height) {
	width: $width;
	height: $height;
}